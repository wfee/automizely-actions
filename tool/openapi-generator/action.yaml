name: "AfterShip OpenAPI Generator Action"
description: "Run the OpenAPI Generator CLI in a Github Action."
inputs:
  path:
    required: true
    description: 'Path for openapi generator run'
  output:
    required: true
    description: 'Output path for code generated'
runs:
  using: composite
  steps:
       - id: check-exists-pr
         uses: actions/github-script@f05a81df23035049204b043b50c3322045ce7eb3 #v3.1.1
         with:
          github-token: ${{github.token}}
          script: |
            const {data: pulls} = await github.pulls.list(
              {
                owner: '${{github.repository_owner}}',
                repo: '${{github.event.repository.name}}',
                state: 'open'
              }
            );
            const pull_generate_code = pulls.find(pull => pull.head.ref.search(/^generate-code/) >= 0); 
            if (pull_generate_code) {
              return pull_generate_code.head.ref
            } else {
              return ""
            }
          result-encoding: string
       - id: intVars
         run: |
            if [ "${{steps.check-exists-pr.outputs.result}}" == "" ]; then
              BRANCH_NAME=generate-code-$(date '+%Y%m%d%H%M%S')
              git checkout -b $BRANCH_NAME
            else
              BRANCH_NAME=${{steps.check-exists-pr.outputs.result}}
              git checkout $BRANCH_NAME
            fi
            echo "NEED_CREATE_PR=0" >> $GITHUB_ENV
            echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
            echo ""
         shell: bash
       - id: generate
         run: | 
            cd $GITHUB_WORKSPACE
            docker run --rm -v $(pwd)/${{ inputs.path }}:/input -v $(pwd)/${{ inputs.output }}:/output jiajie99/openapi-generator-cli:latest
            pwd
            ls
         shell: bash
       - id: commit
         run: |
            git add $(pwd)/${{ inputs.output }}
            export git_commit=$(git status -s)
            if [[ ${#git_commit} != 0 ]];  then
              git config --global user.email "${{github.event.pusher.email}}" 
              git config --global user.name "${{github.event.pusher.name}}" 
              git commit -m ':package: [skip actions] Generate go code from api spec' 
              git push --set-upstream origin $BRANCH_NAME --no-verify
              echo "NEED_CREATE_PR=1" >> $GITHUB_ENV
            else
              echo "Skip commit"
            fi
         shell: bash
       - id: push
         uses: actions/github-script@f05a81df23035049204b043b50c3322045ce7eb3 #v3.1.1
         with:
            github-token: ${{github.token}}
            script: |
              if ("${{env.NEED_CREATE_PR}}" === "1") {
                await github.pulls.create({
                  owner: '${{github.repository_owner}}',
                  repo: '${{github.event.repository.name}}',
                  title: ':package: [skip actions] Generate go code for openapi',
                  head: '${{env.BRANCH_NAME}}',
                  base: 'master'
                });
              }